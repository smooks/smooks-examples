<?xml version="1.0"?>
<smooks-resource-list
	xmlns="https://www.smooks.org/xsd/smooks-1.2.xsd"
	xmlns:jb="https://www.smooks.org/xsd/smooks/javabean-1.6.xsd"
	xmlns:dao="https://www.smooks.org/xsd/smooks/persistence-2.0.xsd">

	<!--
		This is the normal Javabean binding. Notice that we have a wiring on customer. The
	    Customer entity will not be created but looked up by a locator.
	 -->
    <jb:bean beanId="order" class="org.smooks.examples.daorouter.jpa.entity.Order" createOnElement="order">
        <jb:value property="ordernumber"   data="ordernumber" decoder="Integer" />
        <jb:value property="orderDate"     data="date"        decoder="Date">
            <jb:decodeParam name="format">yyyy-MM-dd HH:mm:ss</jb:decodeParam>
        </jb:value>

        <jb:wiring property="customer"  beanIdRef="customer" />
        <jb:wiring setterMethod="addOrderLine"  beanIdRef="orderLine" />
    </jb:bean>

	<!--
		The locator calls the EntityManager#query() method and expects a result. The locator wants
		a unique result but the query() method returns a list. The locator will check that there is only
		one row and extract that row from the list. That entity is inserted into bean repository under
		the bean id customer.
		Because only the order bean, in the previous resource, wants to wire the result the locator
		will by default execute on the same selector as the previous resource.
	-->
    <dao:locator beanId="customer" onNoResult="EXCEPTION" uniqueResult="true">
    	<dao:query>from Customer c where c.id = :id</dao:query>
    	<dao:params>
    		<dao:value name="id" data="customer" decoder="Integer"/>
    	</dao:params>
    </dao:locator>

	<!--
		This is the normal Javabean binding. Notice that we have a wiring on product. The
	    Product entity will not be created but looked up by a locator.
	 -->
    <jb:bean beanId="orderLine" class="org.smooks.examples.daorouter.jpa.entity.OrderLine" createOnElement="order-item">
		<jb:value property="quantity" data="quantity" decoder="Integer"/>
		<jb:wiring property="order" beanIdRef="order"/>
		<jb:wiring property="product" beanIdRef="product"/>
    </jb:bean>

	<!--
		The locator calls the EntityManager#query() method and expects a result. The locator wants
		a unique result but the query() method returns a list. The locator will check that there is only
		one row and extract that row from the list. That entity is inserted into bean repository under
		the bean id product.
	-->
    <dao:locator beanId="product" lookupOnElement="order-item" onNoResult="EXCEPTION" uniqueResult="true">
    	<dao:query>from Product p where p.id = :id</dao:query>
    	<dao:params>
    		<dao:value name="id" data="product" decoder="Integer"/>
    	</dao:params>
    </dao:locator>

	<!--
		The inserter calls the EntityManager#persist() method at the visitAfter of Order.
	-->
	<dao:inserter beanId="order" />

</smooks-resource-list>
