<?xml version="1.0"?>
<!--
  ========================LICENSE_START=================================
  Smooks Example :: EDI-to-Java
  %%
  Copyright (C) 2020 Smooks
  %%
  Licensed under the terms of the Apache License Version 2.0, or
  the GNU Lesser General Public License version 3.0 or later.
  
  SPDX-License-Identifier: Apache-2.0 OR LGPL-3.0-or-later
  
  ======================================================================
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  
  ======================================================================
  
  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 3 of the License, or (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License
  along with this program; if not, write to the Free Software Foundation,
  Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
  =========================LICENSE_END==================================
  -->

<smooks-resource-list
	xmlns="https://www.smooks.org/xsd/smooks-2.0.xsd"
    xmlns:edi="https://www.smooks.org/xsd/smooks/edi-2.0.xsd"
	xmlns:jb="https://www.smooks.org/xsd/smooks/javabean-1.6.xsd">

    <!--
    Configure the EDI Reader to parse the message stream into a stream of SAX events.
    -->
    <edi:parser schemaURI="/edi-to-java-order-mapping.dfdl.xsd" segmentTerminator="%NL;" dataElementSeparator="*"
                compositeDataElementSeparator="^"/>

    <!--
    Create an "example.beans.Order" bean instance when we visit the start of the <order> element.
    Assign the new bean instance to the beanId of "order".
    The "header" and "orderItemList" beans are wired in.
    -->
    <jb:bean beanId="order" class="org.smooks.examples.edi2java.model.Order" createOnElement="Order">
        <jb:wiring property="header" beanIdRef="header" />
        <jb:wiring property="orderItems" beanIdRef="orderItemList" />
    </jb:bean>

    <!--
    Create an "example.beans.Header" bean instance when we visit the start of the <order> element.
    Note, we're creating this bean instance before we encounter the actual <header> element.
    This bean is wired into the "order" bean.
    -->
    <jb:bean beanId="header" class="org.smooks.examples.edi2java.model.Header" createOnElement="${order}/header" retain="true">
        <jb:wiring property="customer" beanIdRef="customer" />
        <jb:value property="orderId" data="#/order-id" />
        <jb:value property="orderStatus" decoder="Long" data="#/status-code" />
        <jb:value property="netAmount" decoder="BigDecimal" data="#/net-amount" />
        <jb:value property="totalAmount" decoder="BigDecimal" data="#/total-amount" />
        <jb:value property="tax" decoder="BigDecimal" data="#/tax" />
        <jb:value property="date" decoder="Date" data="#/date">
            <jb:decodeParam name="format">EEE MMM dd HH:mm:ss z yyyy</jb:decodeParam>
            <jb:decodeParam name="locale">en_IE</jb:decodeParam>
        </jb:value>
    </jb:bean>

    <!--
    Create an "example.beans.Customer" bean instance when we visit the start of the
    <customer-details> element.
	This bean is wired into the "header" bean.
    -->
    <jb:bean beanId="customer" class="org.smooks.examples.edi2java.model.Customer" createOnElement="customer-details">
        <!-- Customer bindings... -->
        <jb:value property="userName" data="#/username" />
        <jb:value property="firstName" data="#/name/firstname" />
        <jb:value property="lastName" data="#/name/lastname" />
        <jb:value property="state" data="#/state" />
    </jb:bean>

	<!--
	Create an ArrayList when we visit the start of the <order> element.
	The "orderItem" beans are wired into this list and this list is wired into the "order" bean.
	 -->
    <jb:bean beanId="orderItemList" class="java.util.ArrayList" createOnElement="Order">
        <jb:wiring beanIdRef="orderItem" />
    </jb:bean>

    <!--
    Create an "example.beans.OrderItem" bean instance when we visit the start of the <order-item> element.
    This bean is wired into the "orderItemList" ArrayList.
    -->
    <jb:bean beanId="orderItem" class="org.smooks.examples.edi2java.model.OrderItem" createOnElement="order-item">
        <!-- OrderItem bindings... -->
        <jb:value property="quantity" decoder="Integer" data="#/quantity" />
        <jb:value property="productId" decoder="String" data="#/product-id" />
        <jb:value property="price" decoder="BigDecimal" data="#/price" />
        <jb:value property="title" data="#/title" />
    </jb:bean>

</smooks-resource-list>
